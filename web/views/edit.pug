extends layout

block content
  h1= title
    div(style="display:inline-block;margin-left:1em",data-spy="affix",data-offset-top="30")
      img(src=baseURL+"/images/ajax-loader.gif",style="visibility:hidden")#loading
      div.btn-group#buttons
        a.btn.btn-default#btn-load
          +icon('repeat', 'Reset')
        a.btn.btn-warning#btn-sort 
          +icon('sort-by-attributes', 'Sort languages')
        a.btn.btn-success#btn-save
          +icon('ok', 'Save')
        a.btn.btn-danger#btn-delete 
          +icon('remove', 'Delete')
        //- a.btn.btn-default#btn-cancel(href=baseURL+"/") Cancel

  div#editor-holder
    
  style.
    .tt-menu.tt-open {
      background-color: rgba(255, 255, 255, 0.9);
      border: 1px solid #ccc;
      border-radius: 5px;
      min-width: 8em;      
    }
    .tt-menu.tt-open .tt-suggestion {
      padding: 3px 5px;
    }
    .tt-menu.tt-open .tt-suggestion:hover,
    .tt-menu.tt-open .tt-suggestion.tt-cursor {
      cursor: pointer;
      background-color: lemonchiffon;
    }
    .affix {
      top: 0px;
      right: 10px;
      z-index: 10000;
    }

  script.
    var editor
    $(document).ready(function () {
      var element = document.getElementById('editor-holder')
      editor = new JSONEditor(element, {
        schema: !{schema}
      })
      editor.on('ready', function () {
        $("#btn-load").trigger('click')
      })
      editor.on('change', function () {
        var langs = new Bloodhound({
          datumTokenizer: Bloodhound.tokenizers.whitespace,
          queryTokenizer: Bloodhound.tokenizers.whitespace,
          local: !{JSON.stringify(languages)}
        })
        var refs = new Bloodhound({
          datumTokenizer: Bloodhound.tokenizers.whitespace,
          queryTokenizer: Bloodhound.tokenizers.whitespace,
          local: !{JSON.stringify(references)}
        })
        var opts = {
          minLength: 1,
          highlight: true
        }
        $('td[data-schemapath^="root.senses"][data-schemapath*="etymologies"] input:not(.typeahead)').addClass('typeahead').typeahead(opts, {
          name: 'language',
          source: langs
        })
        $('td[data-schemapath^="root.etymology"][data-schemapath$="language"] input:not(.typeahead)').addClass('typeahead').typeahead(opts, {
          name: 'language',
          source: langs
        })
        $('td[data-schemapath^="root.etymology"][data-schemapath$="reference"] input:not(.typeahead)').addClass('typeahead').typeahead(opts, {
          name: 'reference',
          source: refs
        })
      })
    })
    
    $("#btn-load").click(function () {
      show_loading()
      $.ajax({
        method: "GET",
        url: "#{baseURL}/entries/#{id}",
        success: function (data) {
          editor.setValue(data)
        },
        error: function (err) {
          alert(err.statusText + "\n" + err.responseJSON.name + "\n" + err.responseJSON.err)
        },
        complete: function () {
          hide_loading()
        }
      })
    })
    
    $("#btn-sort").click(function () {
      show_loading()
      var langs = !{JSON.stringify(languages)}
      var data = editor.getValue()
      console.log(data)
      for (var i in data.senses) {
        data.senses[i].etymologies.sort(function (a,b) {
          var order_a = langs.indexOf(a) > -1 ? langs.indexOf(a) : 9999
          var order_b = langs.indexOf(b) > -1 ? langs.indexOf(b) : 9999
          return order_a - order_b
        })
      }
      data.etymology.sort(function (a,b) {
        var order_a = langs.indexOf(a.language) > -1 ? langs.indexOf(a.language) : 9999
        var order_b = langs.indexOf(b.language) > -1 ? langs.indexOf(b.language) : 9999
        return order_a - order_b
      })
      editor.setValue(data)
      hide_loading()
    })
    $("#btn-save").click(function () {
      var id = "#{id}" // null when adding
      show_loading()
      $.ajax({
        method: "POST",
        contentType: "application/json",
        url: "#{baseURL}/entries/"+id,
        data: JSON.stringify(editor.getValue()),
        success: function (data) {
          if (id) {
            editor.setValue(data)
          } else {
            window.location.replace('#{baseURL}/edit/'+data._id)
          }
        },
        error: function (err) {
          alert(err.statusText + "\n" + err.responseJSON.name + "\n" + err.responseJSON.err)
        },
        complete: function () {
          hide_loading()
        }
      })
    })
    $("#btn-delete").click(function () {
      if (!confirm("Really delete this entry?"))
        return false
      show_loading()
      $.ajax({
        method: "DELETE",
        url: "#{baseURL}/entries/#{id}",
        success: function () {
          window.location.replace('#{baseURL}/')
        },
        error: function (err) {
          alert(err.statusText + "\n" + err.responseJSON.name + "\n" + err.responseJSON.err)
        },
        complete: function () {
          hide_loading()
        }
      })
    })
